name: Build and Push Rust Backend to ACR

on:
  push:
    branches: [ "main" ]

env:
  ACR_REGISTRY: crpi-1ilyfcpy8x1smyaw.cn-beijing.personal.cr.aliyuncs.com
  ACR_REPOSITORY: mistytown/royale-arena-rust-backend
  DOCKERFILE_PATH: backend/Dockerfile
  BUILD_CONTEXT: backend

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Detect release version
      id: detect_release
      run: |
        message=$(printf '%s' "${{ github.event.head_commit.message }}" | head -n 1)
        if [[ "$message" =~ ^[Rr]elease\ [Vv]([0-9]+\.[0-9]+(\.[0-9]+)?)$ ]]; then
          echo "release_tag=${BASH_REMATCH[1]}" >> "$GITHUB_OUTPUT"
          echo "Detected release tag: ${BASH_REMATCH[1]}"
        else
          echo "release_tag=" >> "$GITHUB_OUTPUT"
          echo "Commit message does not match release pattern. Build will be skipped."
        fi
    - name: Checkout code
      if: ${{ steps.detect_release.outputs.release_tag != '' }}
      uses: actions/checkout@v5

    - name: Set up Docker Buildx
      if: ${{ steps.detect_release.outputs.release_tag != '' }}
      uses: docker/setup-buildx-action@v3

    - name: Login to ACR
      if: ${{ steps.detect_release.outputs.release_tag != '' }}
      uses: docker/login-action@v3
      with:
        registry: ${{ env.ACR_REGISTRY }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    - name: Build and push Docker image
      if: ${{ steps.detect_release.outputs.release_tag != '' }}
      uses: docker/build-push-action@v5
      with:
        context: ${{ env.BUILD_CONTEXT }}
        file: ${{ env.DOCKERFILE_PATH }}
        push: true
        tags: |
          ${{ env.ACR_REGISTRY }}/${{ env.ACR_REPOSITORY }}:${{ steps.detect_release.outputs.release_tag }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/amd64

    - name: Print image info
      if: ${{ steps.detect_release.outputs.release_tag != '' }}
      run: |
        echo "Image pushed: ${{ env.ACR_REGISTRY }}/${{ env.ACR_REPOSITORY }}:${{ steps.detect_release.outputs.release_tag }}"