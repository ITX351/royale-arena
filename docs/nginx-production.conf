# Nginx 生产环境配置示例
# 用于部署 Royale Arena 应用

server {
    listen 80;
    server_name your-domain.com;
    
    # 根路径 - Discuz论坛（保持不变）
    location / {
        # 这里是您现有的Discuz论坛配置
        # 请保持您原有的配置不变
        root /path/to/discuz;
        index index.php index.html;
        
        location ~ \.php$ {
            # PHP处理配置
            fastcgi_pass 127.0.0.1:9000;
            fastcgi_index index.php;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            include fastcgi_params;
        }
    }
    
    # 前端应用路径 - Vue应用静态文件
    location /royale-arena/ {
        alias /path/to/royale-arena/frontend/dist/;
        try_files $uri $uri/ /royale-arena/index.html;
        
        # 静态资源缓存
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
    }
    
    # 后端API路径 - 转发到Rust容器
    location /royale-arena/api/ {
        proxy_pass http://127.0.0.1:3000/royale-arena/api/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # CORS 配置（如果需要）
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
        
        # 处理 OPTIONS 请求
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }
    
    # 健康检查端点
    location /health {
        proxy_pass http://127.0.0.1:3000/health;
        access_log off;
    }
}

# 部署说明：
# 1. 前端构建：在 frontend 目录运行 `npm run build` 或 `pnpm build`
# 2. 后端容器：确保Rust后端容器在3000端口运行
# 3. 环境变量：后端使用 API_PREFIX=/royale-arena/api
# 4. 静态文件：将 frontend/dist 内容部署到 /path/to/royale-arena/frontend/dist/
# 5. 路径结构：
#    - /                    -> Discuz论坛（现有）
#    - /royale-arena/       -> Vue前端应用（CSR）
#    - /royale-arena/api/   -> Rust后端API（容器）